+++ WString.h
@@ -34,6 +34,10 @@
 //     -felide-constructors
 //     -std=c++0x
 
+class __FlashStringHelper;
+#define F(string_literal) (reinterpret_cast<const __FlashStringHelper *>(PSTR(string_literal)))
+
+
 // An inherited class for holding the result of a concatenation.  These
 // result objects are assumed to be writable by subsequent concatenations.
 class StringSumHelper;
@@ -56,6 +60,7 @@
     IRAM_ATTR String(const char *cstr = "");
     IRAM_ATTR String(const char *cstr, unsigned int length);
     IRAM_ATTR String(const String &str);
+    IRAM_ATTR String(const __FlashStringHelper *str);
 #ifdef __GXX_EXPERIMENTAL_CXX0X__
     IRAM_ATTR String(String && rval);
     IRAM_ATTR String(StringSumHelper && rval);
@@ -87,6 +92,7 @@
     // marked as invalid ("if (s)" will be false).
     String & IRAM_ATTR operator = (const String &rhs);
     String & IRAM_ATTR operator = (const char *cstr);
+    String & IRAM_ATTR operator = (const __FlashStringHelper *str);
 #ifdef __GXX_EXPERIMENTAL_CXX0X__
     String & operator = (String && rval);
     String & operator = (StringSumHelper && rval);
@@ -107,6 +113,7 @@
     unsigned char concat(unsigned long num);
     unsigned char concat(float num);
     unsigned char concat(double num);
+    unsigned char concat(const __FlashStringHelper * str);
   
     // if there's not enough memory for the concatenated value, the string
     // will be left unchanged (but this isn't signalled in any way)
@@ -171,6 +178,7 @@
     friend StringSumHelper & operator + (const StringSumHelper &lhs, unsigned long num);
     friend StringSumHelper & operator + (const StringSumHelper &lhs, float num);
     friend StringSumHelper & operator + (const StringSumHelper &lhs, double num);
+    friend StringSumHelper & operator + (const StringSumHelper &lhs, const __FlashStringHelper *rhs);
 
     // comparison (only works w/ Strings and "strings")
     operator StringIfHelperType() const
@@ -262,6 +270,8 @@
 
     // copy and move
     String & copy(const char *cstr, unsigned int length);
+    String & copy(const __FlashStringHelper *pstr, unsigned int length);
+
 #ifdef __GXX_EXPERIMENTAL_CXX0X__
     void move(String &rhs);
 #endif
